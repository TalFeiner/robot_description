<?xml version="1.0" encoding="utf-8"?>
<launch>

	<group>
		<arg name="cmd_vel_out" default="cmd_vel"/>
		<arg name="config_locks" default="$(find blattoidea)/config/twist_mux_locks.yaml"/>
		<arg name="config_topics" default="$(find blattoidea)/config/twist_mux_topics.yaml"/>
		<param name="tf_prefix" value="" />		
		<param name="robot_description" command="$(find xacro)/xacro '$(find blattoidea)/urdf/blattoidea_gazebo.urdf.xacro'" />
		
		<param name="sphere_red_description"
		textfile="$(find blattoidea)/urdf/sphere_red.sdf" />
		<param name="sphere_blue_description"
		textfile="$(find blattoidea)/urdf/sphere_blue.sdf" />
		<param name="sphere_green_description"
		textfile="$(find blattoidea)/urdf/sphere_green.sdf" />
		<param name="sphere_yellow_description"
		textfile="$(find blattoidea)/urdf/sphere_yellow.sdf" />
		
		<param name="cylinder_turquoise_description"
		textfile="$(find blattoidea)/urdf/cylinder_turquoise.sdf" />
		<param name="cylinder_purple_description"
		textfile="$(find blattoidea)/urdf/cylinder_purple.sdf" />
		<param name="cylinder_orange_description"
		textfile="$(find blattoidea)/urdf/cylinder_orange.sdf" />
		<param name="cylinder_gold_description"
		textfile="$(find blattoidea)/urdf/cylinder_gold.sdf" />
		
		<!-- convert joint states to TF transforms for rviz, etc -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
		respawn="false" output="screen">
			<remap from="/joint_states" to="/blattoidea/joint_states" />
		</node>

		<include file="$(find gazebo_ros)/launch/empty_world.launch" >
			 <!--<arg name="world_name" value="$(find blattoidea)/worlds/random_velocity.world"/>-->
		</include>	 
		<!--<node
		name="tf_footprint_base"
		pkg="tf"
		type="static_transform_publisher"
		args="0 0 0 0 0 0 base_link base_footprint 40" />-->
		<node
		name="tf_world_map"
		pkg="tf"
		type="static_transform_publisher"
		args="0 0 0 0 0 0 world map 40" />
		<node
		name="tf_map_odom"
		pkg="tf"
		type="static_transform_publisher"
		args="0 0 0 0 0 0 map odom 40" />
		
		<node
		name="spawn_model"
		pkg="gazebo_ros"
		type="spawn_model"
		args="-urdf -model blattoidea -param robot_description"
		output="screen" />
		
		<node
		name="spawn_sphere_red"
		pkg="gazebo_ros"
		type="spawn_model"
		args="-sdf -model sphere_red -param sphere_red_description -x 20"
		output="screen"
		 />
		<node
		name="spawn_sphere_blue"
		pkg="gazebo_ros"
		type="spawn_model"
		args="-sdf -model sphere_blue -param sphere_blue_description -x -20"
		output="screen"
		 />
		<node
		name="spawn_sphere_green"
		pkg="gazebo_ros"
		type="spawn_model"
		args="-sdf -model sphere_green -param sphere_green_description -x 20 -y 20"
		output="screen"
		 />
		<node
		name="spawn_sphere_yellow"
		pkg="gazebo_ros"
		type="spawn_model"
		args="-sdf -model sphere_yellow -param sphere_yellow_description -x 20 -y -20"
		output="screen"
		 />

		 <node
		name="depth_image_compressor"
		pkg="depth2vf"
		type="cv_bridge_py2.py"
		output="screen" />
		 
		<node name="joy_driver"	pkg="joy" type="joy_node" output="screen" >
			<param name="autorepeat_rate" value="10.0" />
			
		</node>
		
		<node name="teleop_joy" pkg="teleop_twist_joy"	type="teleop_node"	output="screen">
			<rosparam command="load" file="$(find blattoidea)/config/teleop_joy_config.yaml" />
			<remap from="cmd_vel" to="joy_vel"/>
		</node>

		<node pkg="twist_mux" type="twist_mux" name="twist_mux" output="screen">
			<remap from="cmd_vel_out" to="$(arg cmd_vel_out)"/>
			<rosparam file="$(arg config_locks)" command="load"/>
			<rosparam file="$(arg config_topics)" command="load"/>
		</node>


		
	</group>

	<include file="$(find blattoidea)/launch/polygon_movement.launch" >
	</include>

    
</launch>
